import { Component, AfterViewInit, ElementRef, ViewChild } from '@angular/core';
import { CommonModule } from '@angular/common';
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';

gsap.registerPlugin(ScrollTrigger);

interface Project {
  title: string;
  description: string;
  image: string;
  url?: string;
  repo?: string;
  skills: string[];
  competenceLevels: Record<string, number>; // 0-100
}

interface TechItem { name: string; icon: string; img?: string; }
interface TechCategory { name: string; icon: string; items: TechItem[]; }

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [CommonModule],
  template: `
      <div class="min-h-screen bg-base-200">
          <!-- Global decorative layers -->
          <div class="site-decor pointer-events-none fixed inset-0 -z-10" aria-hidden="true">
              <div class="stars-layer"></div>
              <div class="constellations-layer"></div>
          </div>
          <!-- Navbar -->
          <div class="navbar sticky top-0 z-50 bg-base-100/80 backdrop-blur border-b border-base-300">
              <div class="flex-1">
                  <a href="#home" class="btn btn-ghost text-xl">Portfolio</a>
              </div>
              <div class="flex-none gap-2">
                  <!-- Desktop anchors -->
                  <ul class="menu menu-horizontal px-1 hidden lg:flex">
                      <li><a href="#technologies">Technologies</a></li>
                      <li><a href="#projects">Projets</a></li>
                      <li><a href="#competences">Comp√©tences BUT</a></li>
                      <li><a href="#formation">Formation</a></li>
                      <li><a href="#experience">Parcours</a></li>
                      <li><a href="#interets">Centres d'int√©r√™t</a></li>
                      <li><a href="#contact">Contact</a></li>
                  </ul>

                  <!-- Theme family + day/night -->
                  <div class="flex items-center gap-2">
                      <select class="select select-sm select-bordered" [value]="currentFamily"
                              (change)="changeTheme($event)">
                          <option *ngFor="let t of themeFamilies" [value]="t">{{ t }}</option>
                      </select>
                      <button class="btn btn-ghost btn-sm" (click)="toggleDarkMode()"
                              [attr.aria-label]="isDark ? 'Activer le mode jour' : 'Activer le mode nuit'">
                          <span *ngIf="!isDark">üåô</span>
                          <span *ngIf="isDark">‚òÄÔ∏è</span>
                      </button>
                  </div>

                  <a class="btn btn-primary btn-sm" href="assets/cv.pdf" download>CV</a>

                  <!-- Mobile menu -->
                  <div class="dropdown dropdown-end lg:hidden">
                      <div tabindex="0" role="button" class="btn btn-ghost">Menu</div>
                      <ul tabindex="0" class="menu dropdown-content bg-base-100 rounded-box z-[1] w-52 p-2 shadow">
                          <li><a href="#technologies">Technologies</a></li>
                          <li><a href="#projects">Projets</a></li>
                          <li><a href="#competences">Comp√©tences BUT</a></li>
                          <li><a href="#formation">Formation</a></li>
                          <li><a href="#experience">Parcours</a></li>
                          <li><a href="#interets">Centres d'int√©r√™t</a></li>
                          <li><a href="#contact">Contact</a></li>
                      </ul>
                  </div>
              </div>
          </div>

          <!-- Hero -->
          <section id="home" class="hero min-h-screen scroll-mt-24 relative overflow-hidden">
              <!-- Decorative GSAP blobs -->
              <div class="pointer-events-none absolute inset-0 -z-10">
                  <div class="blob blob-1 absolute w-80 h-80 bg-gradient-to-br from-primary/30 to-secondary/30 blur-3xl rounded-full -top-16 -left-10"></div>
                  <div class="blob blob-2 absolute w-96 h-96 bg-gradient-to-br from-accent/30 to-secondary/20 blur-3xl rounded-full -bottom-24 -right-16"></div>
              </div>
              <div class="hero-content flex-col lg:flex-row-reverse gap-8 container mx-auto px-4">
                  <img src="assets/img/profile.webp" alt="profile"
                       class="hero-img max-w-sm rounded-2xl shadow-2xl gsap-reveal"/>
                  <div>
                      <h1 class="hero-title text-5xl md:text-6xl font-black leading-tight">Christopher <span
                              class="text-primary">Bondier</span></h1>
                      <p class="hero-sub py-6 text-lg opacity-80 max-w-prose">
                          Alternant en d√©veloppement full-stack. Actuellement en troisi√®me ann√©e de BUT Informatique √†
                          l'IUT Lyon 1 (La Doua).
                      </p>
                      <div class="flex flex-wrap gap-3">
                          <a class="btn btn-secondary hero-cta magnetic" href="#projects">Voir mes projets</a>
                          <a class="btn btn-outline hero-cta magnetic" href="assets/cv.pdf" download>T√©l√©charger mon
                              CV</a>
                      </div>
                  </div>
              </div>
          </section>

          <!-- Technologies -->
          <section id="technologies" class="container mx-auto px-4 py-16 scroll-mt-24">
              <h2 class="text-3xl md:text-4xl font-bold mb-6">Technologies</h2>
              <p class="opacity-70 mb-6">Un aper√ßu structur√© de mes technologies par cat√©gorie.</p>
              <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                  <div *ngFor="let cat of techCategories; trackBy: trackByCategory" class="card bg-base-100 shadow">
                      <div class="card-body">
                          <div class="flex items-center gap-3 mb-2">
                              <div class="text-2xl">{{ cat.icon }}</div>
                              <h3 class="card-title text-xl">{{ cat.name }}</h3>
                          </div>
                          <div class="grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-5 gap-3">
                              <div *ngFor="let t of cat.items; trackBy: trackByTech"
                                   class="rounded-xl border border-base-300/60 bg-base-100/40 backdrop-blur p-3 text-center">
                                  <img *ngIf="t.img" [src]="t.img" [alt]="t.name + ' logo'"
                                       class="w-10 h-10 mx-auto mb-2" loading="lazy" referrerpolicy="no-referrer"/>
                                  <div *ngIf="!t.img" class="text-3xl mb-2">{{ t.icon }}</div>
                                  <div class="text-xs opacity-80">{{ t.name }}</div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </section>

          <!-- Projects -->
          <section id="projects" class="container mx-auto px-4 py-16 scroll-mt-24">
              <div class="flex items-end justify-between mb-6">
                  <h2 class="text-3xl md:text-4xl font-bold gsap-reveal">Projets</h2>
                  <a href="#contact" class="link link-primary">Me contacter</a>
              </div>
              <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                  <div *ngFor="let p of projects; trackBy: trackByTitle" class="card bg-base-100 shadow-xl gsap-card">
                      <figure><img [src]="p.image" [alt]="p.title" class="h-48 w-full object-cover"/></figure>
                      <div class="card-body">
                          <h3 class="card-title">{{ p.title }}</h3>
                          <p class="opacity-80">{{ p.description }}</p>
                          <div class="flex flex-wrap gap-2 mt-2">
                              <span *ngFor="let tag of p.skills" class="badge badge-outline">{{ tag }}</span>
                          </div>
                          <div class="card-actions justify-end mt-4">
                              <button class="btn btn-primary btn-sm" (click)="openProject(p)">Plus d'infos</button>
                              <a *ngIf="p.url" class="btn btn-ghost btn-sm" [href]="p.url" target="_blank"
                                 rel="noopener">Demo</a>
                              <a *ngIf="p.repo" class="btn btn-ghost btn-sm" [href]="p.repo" target="_blank"
                                 rel="noopener">Code</a>
                          </div>
                      </div>
                  </div>
              </div>

              <!-- Project Modal -->
              <dialog #projectModal class="modal">
                  <div class="modal-box max-w-3xl">
                      <h3 class="font-bold text-lg">{{ selectedProject?.title }}</h3>
                      <p class="py-2 opacity-80">{{ selectedProject?.description }}</p>
                      <div class="flex flex-wrap gap-2 mb-4">
                          <span *ngFor="let tag of selectedProject?.skills ?? []"
                                class="badge badge-outline">{{ tag }}</span>
                      </div>
                      <div>
                          <h4 class="font-semibold mb-2">Comp√©tences entra√Æn√©es par ce projet</h4>
                          <div class="flex flex-wrap gap-2">
                              <span *ngFor="let item of projectTrainedCompetences(); trackBy: trackByKey" class="badge"
                                    [ngClass]="item.badgeClass">{{ item.key }}</span>
                          </div>
                      </div>
                      <div class="modal-action">
                          <form method="dialog">
                              <button class="btn">Fermer</button>
                          </form>
                      </div>
                  </div>
                  <form method="dialog" class="modal-backdrop">
                      <button>close</button>
                  </form>
              </dialog>
          </section>

          <!-- Comp√©tences BUT (d√©tails cliquables, code couleur) -->
          <section id="competences" class="container mx-auto px-4 py-16 scroll-mt-24">
              <h2 class="text-3xl md:text-4xl font-bold mb-6">Comp√©tences BUT Informatique</h2>
              <div class="space-y-4">
                  <div *ngFor="let c of competencesData; trackBy: trackByKey"
                       class="collapse collapse-arrow bg-base-100 border border-base-300/60">
                      <input type="checkbox"/>
                      <div class="collapse-title flex items-center justify-between gap-4">
                          <div class="flex items-center gap-3">
                              <span class="inline-block w-2 h-6 rounded" [ngClass]="c.colorBar"></span>
                              <span class="font-medium">{{ c.key }}</span>
                          </div>
                          <span class="badge" [ngClass]="c.badgeClass">Niveau {{ c.level }}</span>
                      </div>
                      <div class="collapse-content">
                          <p class="opacity-80 mb-3">{{ c.justification }}</p>
                          <h4 class="font-semibold mb-1">Situations professionnelles</h4>
                          <ul class="list-disc ms-5 mb-3">
                              <li *ngFor="let s of c.situations">{{ s }}</li>
                          </ul>
                          <h4 class="font-semibold mb-1">Description</h4>
                          <p class="opacity-80">{{ c.description }}</p>
                      </div>
                  </div>
              </div>
          </section>

          <!-- Formation -->
          <section id="formation" class="container mx-auto px-4 py-16 scroll-mt-24">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 gsap-reveal">Formation</h2>
              <ul class="timeline timeline-snap-icon max-md:timeline-compact timeline-vertical">
                  <li *ngFor="let f of formations; let i = index; trackBy: trackByTitle">
                      <div class="timeline-middle">
                          <div class="avatar">
                              <div class="w-10 rounded-full ring ring-primary ring-offset-base-100 ring-offset-2 overflow-hidden">
                                  <img [src]="f.img || 'https://images.unsplash.com/photo-1521310192545-4ac7951413f0?w=100&auto=format&fit=crop'"
                                       [alt]="f.org + ' logo'"/>
                              </div>
                          </div>
                      </div>
                      <div [class]="'timeline-' + (i % 2 === 0 ? 'start md:text-end' : 'end')">
                          <div class="card bg-base-100 shadow">
                              <div class="card-body">
                                  <time class="font-mono italic">{{ f.period }}</time>
                                  <div class="text-lg font-bold">{{ f.title }}</div>
                                  <div class="opacity-80">{{ f.org }}</div>
                                  <div class="opacity-70">{{ f.desc }}</div>
                                  <div class="mt-2 flex flex-wrap gap-2" *ngIf="f.tags?.length">
                                      <span class="badge badge-outline" *ngFor="let tag of f.tags">{{ tag }}</span>
                                  </div>
                              </div>
                          </div>
                      </div>
                      <hr/>
                  </li>
              </ul>
          </section>

          <!-- Experience -->
          <section id="experience" class="container mx-auto px-4 py-16 scroll-mt-24">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 gsap-reveal">Parcours professionnel</h2>
              <ul class="timeline timeline-snap-icon max-md:timeline-compact timeline-vertical">
                  <li *ngFor="let e of experiences; let i = index; trackBy: trackByTitle">
                      <div class="timeline-middle">‚ö°</div>
                      <div [class]="'timeline-' + (i % 2 === 0 ? 'start md:text-end' : 'end')">
                          <time class="font-mono italic">{{ e.period }}</time>
                          <div class="text-lg font-bold">{{ e.title }} ‚Äî {{ e.org }}</div>
                          <div class="opacity-80">{{ e.desc }}</div>
                      </div>
                      <hr/>
                  </li>
              </ul>
          </section>

          <!-- Interests -->
          <section id="interets" class="container mx-auto px-4 py-16 scroll-mt-24">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 gsap-reveal">Centres d'int√©r√™t</h2>
              <div class="flex flex-wrap gap-3">
                  <div *ngFor="let i of interets; trackBy: trackByName" class="badge badge-lg gsap-chip">{{ i }}</div>
              </div>
          </section>

          <!-- Contact -->
          <footer id="contact" class="bg-base-100 border-t border-base-300">
              <div class="container mx-auto px-4 py-12">
                  <h2 class="text-3xl md:text-4xl font-bold mb-6">Contact</h2>
                  <div class="grid gap-6 md:grid-cols-2">
                      <div class="card bg-base-200">
                          <div class="card-body">
                              <h3 class="card-title">Coordonn√©es</h3>
                              <ul class="space-y-2">
                                  <li>üìß Email: <a class="link link-primary" href="mailto:christopherbondier@gmail.com">christopherbondier&#64;gmail.com</a>
                                  </li>
                                  <li>üì± T√©l√©phone: <a class="link" href="tel:+33615925832">06 15 92 58 32</a></li>
                                  <li>üåê Site: <a class="link" href="https://christopher-bondier.fr" target="_blank"
                                                 rel="noopener">christopher-bondier.fr</a></li>
                                  <li>üìç Localisations: Villeurbanne (69100) ‚Äî Lyon, Oyonnax</li>
                                  <li>üóìÔ∏è N√© le 11/10/2004</li>
                              </ul>
                          </div>
                      </div>
                      <div class="card bg-base-200">
                          <div class="card-body">
                              <h3 class="card-title">R√©seaux</h3>
                              <div class="flex flex-wrap gap-3">
                                  <a class="btn btn-outline btn-sm" href="https://www.linkedin.com" target="_blank"
                                     rel="noopener">LinkedIn</a>
                                  <a class="btn btn-outline btn-sm" href="https://github.com" target="_blank"
                                     rel="noopener">GitHub</a>
                                  <a class="btn btn-outline btn-sm" href="#home">Retour en haut</a>
                              </div>
                          </div>
                      </div>
                  </div>
                  <div class="text-center opacity-70 mt-8">¬© 2025 Christopher Bondier ‚Äî Tous droits r√©serv√©s.</div>
              </div>
          </footer>
      </div>
  `,
})
export class AppComponent implements AfterViewInit {
  @ViewChild('projectModal') projectModal!: ElementRef<HTMLDialogElement>;

  // Theme pairing (day/night)
  themeFamilies: string[] = ['cupcake','emerald','lofi'];
  currentFamily: string = 'cupcake';
  isDark: boolean = false;
  themePairs: Record<string, { light: string; dark: string }> = {
    cupcake: { light: 'cupcake', dark: 'dracula' },
    emerald: { light: 'emerald', dark: 'forest' },
    lofi: { light: 'lofi', dark: 'black' },
  };

  skills = [
    // Programmation
    'Python','Java','C','Spring Boot',
    // Web
    'HTML','CSS','JavaScript','Angular','ReactJS','VueJS','PHP','Symfony',
    // Bases de donn√©es
    'SQL','PL/SQL','MongoDB',
    // Outils & Data
    'Git','Power BI',
    // Logiciels
    'VS Code','Android Studio','Code::Blocks','VMware','PowerAMC','Suite Office',
    // Syst√®mes & Gestion de projet
    'Windows','Linux','SCRUM',
    // Langues
    'Fran√ßais (natif)','Anglais (B2)'
  ];

  techCategories: TechCategory[] = [
    {
      name: 'D√©v Web',
      icon: 'üåê',
      items: [
        { name: 'JavaScript', icon: '‚ö°', img: 'https://cdn.simpleicons.org/javascript/F7DF1E' },
        { name: 'TypeScript', icon: 'üß©', img: 'https://cdn.simpleicons.org/typescript/3178C6' },
        { name: 'Angular', icon: 'üÖ∞Ô∏è', img: 'https://cdn.simpleicons.org/angular/DD0031' },
        { name: 'ReactJS', icon: '‚öõÔ∏è', img: 'https://cdn.simpleicons.org/react/61DAFB' },
        { name: 'VueJS', icon: 'üññ', img: 'https://cdn.simpleicons.org/vuedotjs/4FC08D' },
        { name: 'Node.js', icon: 'üü¢', img: 'https://cdn.simpleicons.org/nodedotjs/339933' },
        { name: 'ExpressJS', icon: 'üöè', img: 'https://cdn.simpleicons.org/express/000000' },
        { name: 'PHP', icon: 'üêò', img: 'https://cdn.simpleicons.org/php/777BB4' },
        { name: 'Symfony', icon: 'üéº', img: 'https://cdn.simpleicons.org/symfony/000000' },
      ],
    },
    {
      name: 'D√©v logiciel',
      icon: 'üíª',
      items: [
        { name: 'Python', icon: 'üêç', img: 'https://cdn.simpleicons.org/python/3776AB' },
        { name: 'Java', icon: '‚òï', img: 'https://cdn.simpleicons.org/java/ED8B00' },
        { name: 'C', icon: 'üîß', img: 'https://cdn.simpleicons.org/c/00599C' },
        { name: 'Spring Boot', icon: 'üçÉ', img: 'https://cdn.simpleicons.org/springboot/6DB33F' },
      ],
    },
    {
      name: 'Gestion de projet',
      icon: 'üìã',
      items: [
        { name: 'SCRUM', icon: 'üß≠' },
        { name: 'Git', icon: 'üîÄ', img: 'https://cdn.simpleicons.org/git/F05032' },
      ],
    },
    {
      name: 'Bases de donn√©es',
      icon: 'üóÑÔ∏è',
      items: [
        { name: 'Oracle', icon: 'üìú', img: 'https://cdn.simpleicons.org/oracle/F80000' },
        { name: 'PostgreSQL', icon: 'üêò', img: 'https://cdn.simpleicons.org/postgresql/4169E1' },
        { name: 'MySQL', icon: 'üê¨', img: 'https://cdn.simpleicons.org/mysql/4479A1' },
        { name: 'MongoDB', icon: 'üçÉ', img: 'https://cdn.simpleicons.org/mongodb/47A248' },
        { name: 'Neo4j', icon: 'üï∏Ô∏è', img: 'https://cdn.simpleicons.org/neo4j/008CC1' },
      ],
    },
    {
      name: 'Syst√®mes',
      icon: 'üñ•Ô∏è',
      items: [
        { name: 'Windows', icon: 'ü™ü', img: 'https://cdn.simpleicons.org/windows/0078D6' },
        { name: 'Linux', icon: 'üêß', img: 'https://cdn.simpleicons.org/linux/FCC624' },
        { name: 'Docker', icon: 'üê≥', img: 'https://cdn.simpleicons.org/docker/2496ED' },
        { name: 'Kubernetes', icon: '‚ò∏Ô∏è', img: 'https://cdn.simpleicons.org/kubernetes/326CE5' },
      ],
    },
    {
      name: 'Outils',
      icon: 'üß∞',
      items: [
        { name: 'VS Code', icon: 'üß©', img: 'https://cdn.simpleicons.org/visualstudiocode/007ACC' },
        { name: 'Android Studio', icon: 'ü§ñ', img: 'https://cdn.simpleicons.org/androidstudio/3DDC84' },
        { name: 'JetBrains', icon: 'üí°', img: 'https://cdn.simpleicons.org/jetbrains/000000' },
        { name: 'Code::Blocks', icon: 'üì¶' },
        { name: 'VMware', icon: 'üñ•Ô∏è', img: 'https://cdn.simpleicons.org/vmware/607078' },
        { name: 'PowerAMC', icon: 'üìê' },
        { name: 'Suite Office', icon: 'üìÑ', img: 'https://cdn.simpleicons.org/microsoftoffice/EA3E23' },
        { name: 'Power BI', icon: 'üìä', img: 'https://cdn.simpleicons.org/powerbi/F2C811' },
      ],
    },
  ];

  readonly butCompetences = [
    'R√©aliser',
    'Optimiser',
    'Administrer',
    'G√©rer',
    'Conduire',
    'Collaborer',
  ];

  competenceOverview: Record<string, number> = {
    'R√©aliser un d√©veloppement d‚Äôapplication': 85,
    'Optimiser des applications': 70,
    'Administrer des syst√®mes informatiques': 60,
    'G√©rer des donn√©es de l‚Äôinformation': 75,
    'Conduire un projet': 65,
    'Collaborer au sein d‚Äôune √©quipe': 80,
  };

  formations = [
    {
      period: 'Septembre 2022 ‚Äî Juillet 2025',
      title: 'BUT Informatique (Dipl√¥me en trois ans)',
      org: 'IUT Claude Bernard, Universit√© Lyon 1 ‚Äî Villeurbanne',
      desc: 'Troisi√®me ann√©e en cours',
      img: 'https://images.unsplash.com/photo-1523050854058-8df90110c9f1?w=128&auto=format&fit=crop',
      tags: ['BUT Informatique','IUT Lyon 1','Alternance']
    },
    {
      period: 'Septembre 2019 ‚Äî Juin 2022',
      title: 'Baccalaur√©at G√©n√©ral (Mention Bien)',
      org: 'Lyc√©e Arbez Carme ‚Äî Bellignat',
      desc: 'Options: Math√©matiques, NSI',
      img: 'https://images.unsplash.com/photo-1524995997946-a1c2e315a42f?w=128&auto=format&fit=crop',
      tags: ['Mention Bien','Math√©matiques','NSI']
    }
  ];

  projects: Project[] = [
    {
      title: 'ERP IUT ‚Äî Gestion d√©partement (React/NextJS/Express)',
      description: "Cr√©ation d'un ERP en groupe de 20 personnes pour le d√©partement informatique de l‚ÄôIUT afin de simplifier la gestion des mails, emplois du temps, formations, stages, alternances, notes et absences.",
      image: 'https://images.unsplash.com/photo-1529101091764-c3526daf38fe?q=80&w=1200&auto=format&fit=crop',
      url: undefined,
      repo: undefined,
      skills: ['React','Next.js','Express','Node.js','ERP','Travail en √©quipe'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 85,
        'Optimiser des applications': 65,
        'Administrer des syst√®mes informatiques': 55,
        'G√©rer des donn√©es de l‚Äôinformation': 80,
        'Conduire un projet': 70,
        'Collaborer au sein d‚Äôune √©quipe': 90,
      },
    },
    {
      title: 'Eduquiz ‚Äî Plateforme de flashcards (JS/PHP)',
      description: "Clone du site Quizlet : plateforme √©ducative en ligne pour cr√©er, partager et √©tudier avec des flashcards interactives.",
      image: 'https://images.unsplash.com/photo-1517841905240-472988babdf9?q=80&w=1200&auto=format&fit=crop',
      url: 'https://eduquiz.fun',
      repo: undefined,
      skills: ['JavaScript','PHP','Flashcards','√âducation','Web'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 80,
        'Optimiser des applications': 60,
        'Administrer des syst√®mes informatiques': 40,
        'G√©rer des donn√©es de l‚Äôinformation': 70,
        'Conduire un projet': 60,
        'Collaborer au sein d‚Äôune √©quipe': 75,
      },
    },
    {
      title: 'Itin√©raires transport ‚Äî Graphes (Java)',
      description: "Application d'aide d√©cisionnelle de transport en utilisant des graphes pour calculer les itin√©raires les plus courts.",
      image: 'https://images.unsplash.com/photo-1517411032315-54ef2cb783bb?q=80&w=1200&auto=format&fit=crop',
      url: undefined,
      repo: undefined,
      skills: ['Java','Graphes','Dijkstra','Algorithmes'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 75,
        'Optimiser des applications': 65,
        'Administrer des syst√®mes informatiques': 35,
        'G√©rer des donn√©es de l‚Äôinformation': 60,
        'Conduire un projet': 55,
        'Collaborer au sein d‚Äôune √©quipe': 70,
      },
    },
    {
      title: "Annuaire CSV (C)",
      description: "√âlaboration d'un syst√®me de gestion d'annuaire enregistrant ses donn√©es dans un fichier CSV.",
      image: 'https://images.unsplash.com/photo-1515879218367-8466d910aaa4?q=80&w=1200&auto=format&fit=crop',
      url: undefined,
      repo: undefined,
      skills: ['C','Fichiers','CSV'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 65,
        'Optimiser des applications': 50,
        'Administrer des syst√®mes informatiques': 30,
        'G√©rer des donn√©es de l‚Äôinformation': 55,
        'Conduire un projet': 45,
        'Collaborer au sein d‚Äôune √©quipe': 60,
      },
    },
    {
      title: 'Algorithmes de tri',
      description: 'Impl√©mentation de tri √† bulles, tri fusion, tri par insertion et tri par s√©lection.',
      image: 'https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&w=1200&auto=format&fit=crop',
      url: undefined,
      repo: undefined,
      skills: ['Tri bulle','Tri fusion','Tri insertion','Tri s√©lection','Algorithmie'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 60,
        'Optimiser des applications': 70,
        'Administrer des syst√®mes informatiques': 25,
        'G√©rer des donn√©es de l‚Äôinformation': 40,
        'Conduire un projet': 40,
        'Collaborer au sein d‚Äôune √©quipe': 55,
      },
    },
    {
      title: 'Blog PHP avec base de donn√©es',
      description: "Cr√©ation d'un blog avec base de donn√©e.",
      image: 'https://images.unsplash.com/photo-1461749280684-dccba630e2f6?q=80&w=1200&auto=format&fit=crop',
      url: undefined,
      repo: undefined,
      skills: ['PHP','Base de donn√©es','CRUD','Web'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 70,
        'Optimiser des applications': 50,
        'Administrer des syst√®mes informatiques': 35,
        'G√©rer des donn√©es de l‚Äôinformation': 65,
        'Conduire un projet': 50,
        'Collaborer au sein d‚Äôune √©quipe': 60,
      },
    },
    {
      title: 'Power BI ‚Äî Aide √† la d√©cision',
      description: "Cr√©ation de visuels pour assister une entreprise dans la prise de d√©cisions favorisant la g√©n√©ration de profits.",
      image: 'https://images.unsplash.com/photo-1551281044-8b89adc1cf5e?q=80&w=1200&auto=format&fit=crop',
      url: undefined,
      repo: undefined,
      skills: ['Power BI','DataViz','D√©cisionnel'],
      competenceLevels: {
        'R√©aliser un d√©veloppement d‚Äôapplication': 50,
        'Optimiser des applications': 45,
        'Administrer des syst√®mes informatiques': 30,
        'G√©rer des donn√©es de l‚Äôinformation': 70,
        'Conduire un projet': 55,
        'Collaborer au sein d‚Äôune √©quipe': 65,
      },
    },
  ];

  experiences = [
    {
      period: "Ao√ªt 2024 ‚Äî Ao√ªt 2025",
      title: "Alternance d√©veloppeur full-stack",
      org: "UBIKAP ‚Äî Villeurbanne",
      desc: "Angular / NodeJS ¬∑ Maintenance de la solution existante."
    },
    {
      period: "Avril 2023 ‚Äî Juillet 2023",
      title: "Stage d√©veloppeur full-stack",
      org: "UBIKAP ‚Äî Villeurbanne",
      desc: "Angular / NodeJS ¬∑ Maintenance de la solution existante ¬∑ Cr√©ation d'une page permettant aux utilisateurs de suivre les consommations payantes effectu√©es sur notre solution."
    }
  ];

  interets = ['üéµ Musique', 'üèÉ Sport', 'üì∏ Photo', 'üßë‚Äçüç≥ Cuisine', 'üß© Jeux de logique', '‚úàÔ∏è Voyage'];

  // Comp√©tences BUT (donn√©es + niveaux + couleurs)
  competencesData = [
    {
      key: 'R√©aliser',
      colorBar: 'bg-red-500',
      badgeClass: 'badge-outline text-red-500 border-red-500',
      level: 3,
      situations: [
        "√âlaborer une application informatique",
        "Faire √©voluer une application informatique",
        "Maintenir en conditions op√©rationnelles une application informatique",
      ],
      description: "Concevoir, d√©velopper et maintenir des applications sur divers supports (web, mobile, embarqu√©, etc.) en appliquant les bonnes pratiques.",
      justification: "Niveau 3 acquis via la r√©alisation compl√®te d'applications (ERP IUT, Eduquiz, blog PHP) avec int√©gration front/back, qualit√© de code et maintenance.",
    },
    {
      key: 'Optimiser',
      colorBar: 'bg-orange-500',
      badgeClass: 'badge-outline text-orange-500 border-orange-500',
      level: 3,
      situations: [
        "Am√©liorer les performances des programmes dans des contextes contraints",
        "Limiter l‚Äôimpact environnemental d‚Äôune application informatique",
        "Mettre en place des applications informatiques adapt√©es et efficaces",
      ],
      description: "Analyser et optimiser les performances des applications et leurs empreintes (temps, m√©moire, √©nergie).",
      justification: "Niveau 3 confirm√© par l'optimisation d'algorithmes (graphes, tris) et d'applications web (requ√™tes, cache, assets).",
    },
    {
      key: 'Administrer',
      colorBar: 'bg-yellow-500',
      badgeClass: 'badge-outline text-yellow-600 border-yellow-500',
      level: 2,
      situations: [
        "D√©ployer une nouvelle architecture technique",
        "Am√©liorer une infrastructure existante",
        "S√©curiser les applications et les services",
      ],
      description: "Mettre en place, configurer et s√©curiser des services/syst√®mes de base en environnement r√©seau.",
      justification: "Niveau 2 gr√¢ce √† des d√©ploiements et configurations simples (stages/alternance) et √† la s√©curisation basique des services.",
    },
    {
      key: 'G√©rer',
      colorBar: 'bg-green-500',
      badgeClass: 'badge-outline text-green-600 border-green-500',
      level: 2,
      situations: [
        "Lancer un nouveau projet",
        "S√©curiser des donn√©es",
        "Exploiter des donn√©es pour la prise de d√©cisions",
      ],
      description: "Concevoir, manipuler et prot√©ger des donn√©es; analyser et restituer pour la d√©cision (BI).",
      justification: "Niveau 2 attest√© par la cr√©ation de mod√®les de donn√©es (blog, ERP) et des tableaux de bord (Power BI).",
    },
    {
      key: 'Conduire',
      colorBar: 'bg-blue-700',
      badgeClass: 'badge-outline text-blue-700 border-blue-700',
      level: 2,
      situations: [
        "Lancer un nouveau projet",
        "Piloter le maintien d‚Äôun projet en condition op√©rationnelle",
        "Faire √©voluer un syst√®me d‚Äôinformation",
      ],
      description: "Planifier, suivre et faire √©voluer des projets informatiques √† l'√©chelle √©quipe/produit.",
      justification: "Niveau 2 gr√¢ce au pilotage de lots (ERP √† 20), suivi des tickets et am√©lioration continue en alternance.",
    },
    {
      key: 'Collaborer',
      colorBar: 'bg-black',
      badgeClass: 'badge-outline text-black border-black',
      level: 2,
      situations: [
        "Lancer un nouveau projet",
        "Organiser son travail en relation avec celui de son √©quipe",
        "√âlaborer, g√©rer et transmettre de l‚Äôinformation",
      ],
      description: "Travailler efficacement en √©quipe (m√©thodes, outils, communication).",
      justification: "Niveau 2 valid√© par le travail d'√©quipe (SCRUM, Git) sur ERP/alternance et la communication r√©guli√®re.",
    },
  ];

  // Mapping des libell√©s complets (projets) -> cl√©s courtes
  competenceKeyMap: Record<string, string> = {
    'R√©aliser un d√©veloppement d‚Äôapplication': 'R√©aliser',
    'Optimiser des applications': 'Optimiser',
    'Administrer des syst√®mes informatiques': 'Administrer',
    'G√©rer des donn√©es de l‚Äôinformation': 'G√©rer',
    'Conduire un projet': 'Conduire',
    'Collaborer au sein d‚Äôune √©quipe': 'Collaborer',
  };

  selectedProject: Project | null = null;

  ngAfterViewInit(): void {
    // Theme initialization (persisted)
    let savedFamily: string | null = null;
    let savedDark: string | null = null;
    try {
      savedFamily = localStorage.getItem('themeFamily');
      savedDark = localStorage.getItem('isDark');
    } catch {}

    if (savedFamily) {
      this.currentFamily = savedFamily;
      this.isDark = savedDark === '1';
    } else {
      const attr = document.documentElement.getAttribute('data-theme') || 'cupcake';
      // Try to resolve family/isDark from current data-theme
      let resolved = false;
      for (const fam of Object.keys(this.themePairs)) {
        const pair = this.themePairs[fam];
        if (attr === pair.dark) { this.currentFamily = fam; this.isDark = true; resolved = true; break; }
        if (attr === pair.light) { this.currentFamily = fam; this.isDark = false; resolved = true; break; }
      }
      if (!resolved) {
        this.currentFamily = 'cupcake';
        this.isDark = false;
      }
    }
    this.applyCurrentTheme();

    // Hero intro animations
    gsap.from('.hero-title', { y: 20, opacity: 0, duration: 0.8, ease: 'power3.out' });
    gsap.from('.hero-sub', { y: 20, opacity: 0, duration: 0.8, delay: 0.15, ease: 'power3.out' });
    gsap.from('.hero-cta', { y: 10, opacity: 0, duration: 0.6, delay: 0.3, stagger: 0.1, ease: 'power3.out' });

    // Generic reveal on scroll
    gsap.utils.toArray<HTMLElement>('.gsap-reveal').forEach((el: HTMLElement) => {
      gsap.from(el, {
        opacity: 0,
        y: 30,
        duration: 0.8,
        ease: 'power3.out',
        scrollTrigger: {
          trigger: el,
          start: 'top 80%',
        },
      });
    });

    // Cards/Chips stagger reveal
    gsap.utils.toArray<HTMLElement>('.gsap-card, .gsap-chip').forEach((el: HTMLElement) => {
      gsap.from(el, {
        opacity: 0,
        y: 20,
        duration: 0.6,
        ease: 'power2.out',
        scrollTrigger: {
          trigger: el,
          start: 'top 85%',
        },
      });
    });


    // Floating gradient blobs in hero
    gsap.to('.blob-1', { x: 30, y: -20, duration: 8, yoyo: true, repeat: -1, ease: 'sine.inOut' });
    gsap.to('.blob-2', { x: -25, y: 30, duration: 9, yoyo: true, repeat: -1, ease: 'sine.inOut' });

    // Parallax effect on hero image while scrolling
    gsap.to('.hero-img', {
      yPercent: -10,
      ease: 'none',
      scrollTrigger: { trigger: '#home', start: 'top top', end: 'bottom top', scrub: true }
    });

    // Magnetic buttons
    document.querySelectorAll('.magnetic').forEach((btn) => {
      const el = btn as HTMLElement;
      const move = (e: MouseEvent) => {
        const rect = el.getBoundingClientRect();
        const x = e.clientX - (rect.left + rect.width / 2);
        const y = e.clientY - (rect.top + rect.height / 2);
        gsap.to(el, { x: x * 0.2, y: y * 0.2, duration: 0.3, ease: 'power3.out' });
      };
      const reset = () => gsap.to(el, { x: 0, y: 0, duration: 0.4, ease: 'power3.out' });
      el.addEventListener('mousemove', move);
      el.addEventListener('mouseleave', reset);
    });

  }

  changeTheme(event: Event) {
    const value = (event.target as HTMLSelectElement).value;
    this.currentFamily = value;
    try { localStorage.setItem('themeFamily', this.currentFamily); } catch {}
    this.applyCurrentTheme();
  }

  toggleDarkMode() {
    this.isDark = !this.isDark;
    try { localStorage.setItem('isDark', this.isDark ? '1' : '0'); } catch {}
    this.applyCurrentTheme();
  }

  private getEffectiveTheme(): string {
    const pair = this.themePairs[this.currentFamily];
    if (pair) return this.isDark ? pair.dark : pair.light;
    return this.currentFamily;
  }

  private applyCurrentTheme() {
    const theme = this.getEffectiveTheme();
    this.applyTheme(theme);
  }

  private applyTheme(theme: string) {
    document.documentElement.setAttribute('data-theme', theme);
    try { localStorage.setItem('theme', theme); } catch {}
  }

  openProject(p: Project) {
    this.selectedProject = p;
    if (this.projectModal?.nativeElement) {
      this.projectModal.nativeElement.showModal();
    }
  }

  valueForCompetence(c: string): number {
    const project = this.selectedProject;
    if (!project) return 0;
    const levels = project.competenceLevels ?? {};
    const v = levels[c];
    return typeof v === 'number' && isFinite(v) ? v : 0;
  }

  levelFromValue(v: number): number {
    if (!(typeof v === 'number' && isFinite(v))) return 0;
    if (v <= 0) return 0;
    if (v <= 20) return 1;
    if (v <= 40) return 2;
    if (v <= 60) return 3;
    if (v <= 80) return 4;
    return 5;
  }

  levelLabel(v: number): string {
    const lvl = this.levelFromValue(v);
    switch (lvl) {
      case 0: return "√Ä d√©finir";
      case 1: return "D√©butant";
      case 2: return "Interm√©diaire -";
      case 3: return "Interm√©diaire";
      case 4: return "Avanc√©";
      case 5: return "Expert";
      default: return "√Ä d√©finir";
    }
  }

  levelStars(v: number): string {
    const lvl = this.levelFromValue(v);
    const full = "‚òÖ".repeat(Math.max(0, Math.min(5, lvl)));
    const empty = "‚òÜ".repeat(5 - Math.max(0, Math.min(5, lvl)));
    return full + empty;
  }

  projectTrainedCompetences(): { key: string; badgeClass: string }[] {
    const p = this.selectedProject;
    if (!p || !p.competenceLevels) return [];
    const items = Object.entries(p.competenceLevels)
      .filter(([_, v]) => typeof v === 'number' && isFinite(v) && v > 0)
      .map(([longKey, v]) => ({ longKey, v }))
      .sort((a, b) => b.v - a.v)
      .map(({ longKey }) => {
        const key = this.competenceKeyMap[longKey] || longKey;
        const conf = this.competencesData.find(x => x.key === key);
        const badgeClass = conf?.badgeClass || 'badge-outline';
        return { key, badgeClass };
      });
    // dedupe by key while preserving order
    const seen = new Set<string>();
    const out: { key: string; badgeClass: string }[] = [];
    for (const it of items) {
      if (!seen.has(it.key)) { seen.add(it.key); out.push(it); }
    }
    return out;
  }

  trackByKey = (_: number, item: any) => item?.key ?? item;
  trackByCategory = (_: number, cat: TechCategory) => cat.name;
  trackByTech = (_: number, t: TechItem) => t.name;
  trackByName = (_: number, item: any) => (item && (item.name ?? item));
  trackByTitle = (_: number, item: any) => item.title ?? item;
}
